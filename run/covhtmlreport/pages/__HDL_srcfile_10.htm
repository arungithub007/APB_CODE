
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>
<a name="2"><q-n>     2  </q-n></a><q-w>class</q-w> apb_mas_agnt <q-w>extends</q-w> uvm_agent;
<a name="3"><q-n>     3  </q-n></a>`uvm_component_utils(apb_mas_agnt)
<a name="4"><q-n>     4  </q-n></a>  
<a name="5"><q-n>     5  </q-n></a>  apb_mas_sequencer mas_sequencer;
<a name="6"><q-n>     6  </q-n></a>  apb_mas_driver drv;
<a name="7"><q-n>     7  </q-n></a>  apb_mas_monitor mon;
<a name="8"><q-n>     8  </q-n></a>  apb_mas_conf m_conf;		<q-m>//master config file handle</q-m>
<a name="9"><q-n>     9  </q-n></a>  
<a name="10"><q-n>     10  </q-n></a>
<a name="11"><q-n>     11  </q-n></a>  <q-m>//constructor function</q-m>
<a name="12"><q-n>     12  </q-n></a>  <q-w>function</q-w> <q-w>new</q-w> (<q-w>string</q-w>  name,uvm_component parent);
<a name="13"><q-n>     13  </q-n></a>    <q-w>super</q-w>.<q-w>new</q-w>(name,parent);
<a name="14"><q-n>     14  </q-n></a>  <q-w>endfunction</q-w>:<q-w>new</q-w>
<a name="15"><q-n>     15  </q-n></a>
<a name="16"><q-n>     16  </q-n></a>  <q-m>//build phase</q-m>
<a name="17"><q-n>     17  </q-n></a>  <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="18"><q-n>     18  </q-n></a>    <q-w>super</q-w>.build_phase(phase);
<a name="19"><q-n>     19  </q-n></a>    
<a name="20"><q-n>     20  </q-n></a>    <q-m>//buid 'driver' and 'seqencer' if "agent" is active </q-m>
<a name="21"><q-n>     21  </q-n></a>    <q-w>if</q-w>(get_is_active()==UVM_ACTIVE)<q-w>begin</q-w>
<a name="22"><q-n>     22  </q-n></a>          
<a name="23"><q-n>     23  </q-n></a>	  <q-m>//build sequencer hndle</q-m>
<a name="24"><q-n>     24  </q-n></a>	  mas_sequencer=apb_mas_sequencer::type_id::create(<q-l>"mas_sequencer"</q-l>,<q-w>this</q-w>);
<a name="25"><q-n>     25  </q-n></a>          
<a name="26"><q-n>     26  </q-n></a>	  <q-m>//buid driver hndle</q-m>
<a name="27"><q-n>     27  </q-n></a>	  drv=apb_mas_driver::type_id::create(<q-l>"drv"</q-l>,<q-w>this</q-w>);
<a name="28"><q-n>     28  </q-n></a>      <q-w>end</q-w>
<a name="29"><q-n>     29  </q-n></a>    
<a name="30"><q-n>     30  </q-n></a>     <q-m>//buid monitor</q-m>
<a name="31"><q-n>     31  </q-n></a>      mon=apb_mas_monitor::type_id::create(<q-l>"mon"</q-l>,<q-w>this</q-w>);
<a name="32"><q-n>     32  </q-n></a>	
<a name="33"><q-n>     33  </q-n></a>      <q-m>//get agent config from uvm_config_db</q-m>
<a name="34"><q-n>     34  </q-n></a>      <q-w>if</q-w>(!uvm_config_db#(apb_mas_conf)::get(<q-w>this</q-w>,<q-l>""</q-l>,<q-l>"apb_mas_conf"</q-l>,m_conf))<q-w>begin</q-w> 
<a name="35"><q-n>     35  </q-n></a>	`uvm_fatal(<q-l>"mas_config not found"</q-l>,$sformatf(<q-l>"EORROR:: unable to retrieve apb_mas_conf from uvm_config_db"</q-l>))
<a name="36"><q-n>     36  </q-n></a>	<q-w>end</q-w>
<a name="37"><q-n>     37  </q-n></a>
<a name="38"><q-n>     38  </q-n></a>
<a name="39"><q-n>     39  </q-n></a>  <q-w>endfunction</q-w>:build_phase
<a name="40"><q-n>     40  </q-n></a>  
<a name="41"><q-n>     41  </q-n></a>  <q-m>// connect_phase</q-m>
<a name="42"><q-n>     42  </q-n></a>  <q-w>function</q-w> <q-w>void</q-w> connect_phase(uvm_phase phase);
<a name="43"><q-n>     43  </q-n></a>    
<a name="44"><q-n>     44  </q-n></a><q-m>//connect driver and sequencer ports and interface hndls if agent is active	  </q-m>
<a name="45"><q-n>     45  </q-n></a>    <q-w>if</q-w>(get_is_active()==UVM_ACTIVE)<q-w>begin</q-w>
<a name="46"><q-n>     46  </q-n></a>
<a name="47"><q-n>     47  </q-n></a>
<a name="48"><q-n>     48  </q-n></a> <q-m>/*    </q-m>
<a name="49"><q-n>     49  </q-n></a><q-m>      //connect config from conf inside driver</q-m>
<a name="50"><q-n>     50  </q-n></a><q-m>      drv.m_conf=m_conf;</q-m>
<a name="51"><q-n>     51  </q-n></a><q-m></q-m>
<a name="52"><q-n>     52  </q-n></a><q-m>      //connect interface hndl inside driver with interface handl from config</q-m>
<a name="53"><q-n>     53  </q-n></a><q-m>      drv.vif=m_conf.vif;</q-m>
<a name="54"><q-n>     54  </q-n></a><q-m></q-m>
<a name="55"><q-n>     55  </q-n></a><q-m>*/</q-m>
<a name="56"><q-n>     56  </q-n></a>
<a name="57"><q-n>     57  </q-n></a><q-m>//connect sequence item port of driver and seq_item_export of seqencer is conneced in agent </q-m>
<a name="58"><q-n>     58  </q-n></a>
<a name="59"><q-n>     59  </q-n></a>
<a name="60"><q-n>     60  </q-n></a>    drv.seq_item_port.connect(mas_sequencer.seq_item_export);
<a name="61"><q-n>     61  </q-n></a><q-w>end</q-w>
<a name="62"><q-n>     62  </q-n></a>
<a name="63"><q-n>     63  </q-n></a>
<a name="64"><q-n>     64  </q-n></a>
<a name="65"><q-n>     65  </q-n></a>  <q-w>endfunction</q-w>:connect_phase
<a name="66"><q-n>     66  </q-n></a><q-w>endclass</q-w>:apb_mas_agnt
</pre>
</tt>

  
</body>
</html>
