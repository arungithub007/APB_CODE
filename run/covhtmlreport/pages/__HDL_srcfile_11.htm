
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a>`uvm_analysis_imp_decl(_drv2scb)
<a name="2"><q-n>     2  </q-n></a>`uvm_analysis_imp_decl(_item_collected)
<a name="3"><q-n>     3  </q-n></a>
<a name="4"><q-n>     4  </q-n></a><q-w>class</q-w> apb_scb <q-w>extends</q-w> uvm_scoreboard;
<a name="5"><q-n>     5  </q-n></a>	`uvm_component_utils(apb_scb)
<a name="6"><q-n>     6  </q-n></a>
<a name="7"><q-n>     7  </q-n></a>
<a name="8"><q-n>     8  </q-n></a><q-m>//variables</q-m>
<a name="9"><q-n>     9  </q-n></a><q-m>//assosiative arry syntax</q-m>
<a name="10"><q-n>     10  </q-n></a><q-m>//  value        array_name        [key]</q-m>
<a name="11"><q-n>     11  </q-n></a><q-m>//data_type    array_identifier  [indextype]</q-m>
<a name="12"><q-n>     12  </q-n></a><q-w>bit</q-w>[31:0] ref_data[*];    <q-m>// declaring assosiative array</q-m>
<a name="13"><q-n>     13  </q-n></a>
<a name="14"><q-n>     14  </q-n></a>
<a name="15"><q-n>     15  </q-n></a>
<a name="16"><q-n>     16  </q-n></a><q-m>// declaring the analysis port for item collected in sc components</q-m>
<a name="17"><q-n>     17  </q-n></a>uvm_analysis_imp_item_collected#(apb_seq_item, apb_scb)item_collected_export;  <q-m>//monitor to scoreboard</q-m>
<a name="18"><q-n>     18  </q-n></a>uvm_analysis_imp_drv2scb#(apb_seq_item, apb_scb)drv2scb_export;         <q-m>//driver to scoreboard</q-m>
<a name="19"><q-n>     19  </q-n></a>
<a name="20"><q-n>     20  </q-n></a>
<a name="21"><q-n>     21  </q-n></a>
<a name="22"><q-n>     22  </q-n></a><q-m>//constructor function</q-m>
<a name="23"><q-n>     23  </q-n></a>        <q-w>function</q-w> <q-w>new</q-w>(<q-w>string</q-w> name=<q-l>"apb_scb"</q-l>,uvm_component parent);
<a name="24"><q-n>     24  </q-n></a>		<q-w>super</q-w>.<q-w>new</q-w>(name,parent);
<a name="25"><q-n>     25  </q-n></a>	<q-w>endfunction</q-w>:<q-w>new</q-w>
<a name="26"><q-n>     26  </q-n></a>
<a name="27"><q-n>     27  </q-n></a><q-m>//build phase</q-m>
<a name="28"><q-n>     28  </q-n></a>	<q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> build_phase(uvm_phase phase);
<a name="29"><q-n>     29  </q-n></a>	<q-w>super</q-w>.build_phase(phase);    
<a name="30"><q-n>     30  </q-n></a>	<q-m>//create analysis port</q-m>
<a name="31"><q-n>     31  </q-n></a>	item_collected_export=<q-w>new</q-w>(<q-l>"item_collected_export"</q-l>,<q-w>this</q-w>);
<a name="32"><q-n>     32  </q-n></a>	    drv2scb_export=<q-w>new</q-w>(<q-l>"drv2scb_export"</q-l>,<q-w>this</q-w>);
<a name="33"><q-n>     33  </q-n></a>        <q-w>endfunction</q-w>
<a name="34"><q-n>     34  </q-n></a>
<a name="35"><q-n>     35  </q-n></a>
<a name="36"><q-n>     36  </q-n></a>
<a name="37"><q-n>     37  </q-n></a>        <q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> write_drv2scb(apb_seq_item req_collected);
<a name="38"><q-n>     38  </q-n></a> 
<a name="39"><q-n>     39  </q-n></a>
<a name="40"><q-n>     40  </q-n></a>	 <q-w>if</q-w>(req_collected.pwrite==1)
<a name="41"><q-n>     41  </q-n></a>	 
<a name="42"><q-n>     42  </q-n></a>                                    <q-w>begin</q-w>
<a name="43"><q-n>     43  </q-n></a>
<a name="44"><q-n>     44  </q-n></a>	                            ref_data[req_collected.paddr]=req_collected.pwdata;  <q-m>// data comes from driver</q-m>
<a name="45"><q-n>     45  </q-n></a>                                    <q-w>end</q-w>
<a name="46"><q-n>     46  </q-n></a>   
<a name="47"><q-n>     47  </q-n></a>				    <q-w>else</q-w>  <q-w>begin</q-w>
<a name="48"><q-n>     48  </q-n></a>	        	<q-w>if</q-w> (ref_data.exists(req_collected.paddr)) <q-w>begin</q-w>	    
<a name="49"><q-n>     49  </q-n></a>	                <q-w>if</q-w> ((ref_data[req_collected.paddr]==req_collected.prdata)) <q-w>begin</q-w>
<a name="50"><q-n>     50  </q-n></a>		            `uvm_info(get_full_name(),$sformatf(<q-l>" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h"</q-l>, req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);
<a name="51"><q-n>     51  </q-n></a>                           `uvm_info(get_full_name(),<q-l>"read_operation_matched_with_write_operation"</q-l>, UVM_LOW);
<a name="52"><q-n>     52  </q-n></a>                    
<a name="53"><q-n>     53  </q-n></a>	                <q-w>end</q-w>
<a name="54"><q-n>     54  </q-n></a>                	<q-w>else</q-w> <q-w>begin</q-w>
<a name="55"><q-n>     55  </q-n></a>
<a name="56"><q-n>     56  </q-n></a>                          `uvm_info(get_full_name(),<q-l>"read_operation_not_matched_with_write_operation"</q-l>, UVM_LOW);
<a name="57"><q-n>     57  </q-n></a>                       
<a name="58"><q-n>     58  </q-n></a>		              <q-w>end</q-w>
<a name="59"><q-n>     59  </q-n></a>                         <q-w>end</q-w>
<a name="60"><q-n>     60  </q-n></a>		 <q-w>end</q-w>
<a name="61"><q-n>     61  </q-n></a>
<a name="62"><q-n>     62  </q-n></a>       <q-m>// else   `uvm_info(get_full_name(),"data_not_exist_in_the_addr", UVM_LOW);</q-m>
<a name="63"><q-n>     63  </q-n></a>	      
<a name="64"><q-n>     64  </q-n></a> 
<a name="65"><q-n>     65  </q-n></a>     `uvm_info(get_full_name(),$sformatf(<q-l>" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h"</q-l>, req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);    
<a name="66"><q-n>     66  </q-n></a>	    
<a name="67"><q-n>     67  </q-n></a><q-w>endfunction</q-w> : write_drv2scb
<a name="68"><q-n>     68  </q-n></a>
<a name="69"><q-n>     69  </q-n></a>        <q-w>virtual</q-w> <q-w>function</q-w> <q-w>void</q-w> write_item_collected(apb_seq_item req_collected);
<a name="70"><q-n>     70  </q-n></a> 
<a name="71"><q-n>     71  </q-n></a>
<a name="72"><q-n>     72  </q-n></a>	 <q-w>if</q-w>(req_collected.pwrite==1)
<a name="73"><q-n>     73  </q-n></a>	 
<a name="74"><q-n>     74  </q-n></a>                                    <q-w>begin</q-w>
<a name="75"><q-n>     75  </q-n></a>
<a name="76"><q-n>     76  </q-n></a>	                            ref_data[req_collected.paddr]=req_collected.pwdata;  <q-m>// data comes from monitor </q-m>
<a name="77"><q-n>     77  </q-n></a>                                    <q-w>end</q-w>
<a name="78"><q-n>     78  </q-n></a>   
<a name="79"><q-n>     79  </q-n></a>				    <q-w>else</q-w>  <q-w>begin</q-w>
<a name="80"><q-n>     80  </q-n></a>	        	<q-w>if</q-w> (ref_data.exists(req_collected.paddr)) <q-w>begin</q-w>	    
<a name="81"><q-n>     81  </q-n></a>	                <q-w>if</q-w> ((ref_data[req_collected.paddr]==req_collected.prdata)) <q-w>begin</q-w>
<a name="82"><q-n>     82  </q-n></a>		            `uvm_info(get_full_name(),$sformatf(<q-l>" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h"</q-l>, req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);
<a name="83"><q-n>     83  </q-n></a>                           `uvm_info(get_full_name(),<q-l>"read_operation_matched_with_write_operation"</q-l>, UVM_LOW);
<a name="84"><q-n>     84  </q-n></a>                    
<a name="85"><q-n>     85  </q-n></a>	                <q-w>end</q-w>
<a name="86"><q-n>     86  </q-n></a>                	<q-w>else</q-w> <q-w>begin</q-w>
<a name="87"><q-n>     87  </q-n></a>
<a name="88"><q-n>     88  </q-n></a>                          `uvm_info(get_full_name(),<q-l>"read_operation_not_matched_with_write_operation"</q-l>, UVM_LOW);
<a name="89"><q-n>     89  </q-n></a>                       
<a name="90"><q-n>     90  </q-n></a>		              <q-w>end</q-w>
<a name="91"><q-n>     91  </q-n></a>                         <q-w>end</q-w>
<a name="92"><q-n>     92  </q-n></a>		 <q-w>end</q-w>
<a name="93"><q-n>     93  </q-n></a>
<a name="94"><q-n>     94  </q-n></a>       <q-m>// else   `uvm_info(get_full_name(),"data_not_exist_in_the_addr", UVM_LOW);</q-m>
<a name="95"><q-n>     95  </q-n></a>	      
<a name="96"><q-n>     96  </q-n></a> 
<a name="97"><q-n>     97  </q-n></a>     `uvm_info(get_full_name(),$sformatf(<q-l>" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h"</q-l>, req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);    
<a name="98"><q-n>     98  </q-n></a>	    
<a name="99"><q-n>     99  </q-n></a><q-w>endfunction</q-w> : write_item_collected
<a name="100"><q-n>     100  </q-n></a>
<a name="101"><q-n>     101  </q-n></a>
<a name="102"><q-n>     102  </q-n></a>
<a name="103"><q-n>     103  </q-n></a><q-w>endclass</q-w>
<a name="104"><q-n>     104  </q-n></a>	<q-m>/*</q-m>
<a name="105"><q-n>     105  </q-n></a><q-m>	//implementing the write function</q-m>
<a name="106"><q-n>     106  </q-n></a><q-m></q-m>
<a name="107"><q-n>     107  </q-n></a><q-m>        virtual function void write_drv2scb(apb_seq_item req_collected);</q-m>
<a name="108"><q-n>     108  </q-n></a><q-m> </q-m>
<a name="109"><q-n>     109  </q-n></a><q-m></q-m>
<a name="110"><q-n>     110  </q-n></a><q-m>	 if(req_collected.pwrite==1)</q-m>
<a name="111"><q-n>     111  </q-n></a><q-m>	 </q-m>
<a name="112"><q-n>     112  </q-n></a><q-m>                                    begin</q-m>
<a name="113"><q-n>     113  </q-n></a><q-m></q-m>
<a name="114"><q-n>     114  </q-n></a><q-m>	                            ref_data[req_collected.pwdata]=req_collected.pwdata;  // data comes from driver</q-m>
<a name="115"><q-n>     115  </q-n></a><q-m>                                    end</q-m>
<a name="116"><q-n>     116  </q-n></a><q-m>   </q-m>
<a name="117"><q-n>     117  </q-n></a><q-m>				    else  begin</q-m>
<a name="118"><q-n>     118  </q-n></a><q-m>	        	if (ref_data.exists(req_collected.paddr)) begin	    </q-m>
<a name="119"><q-n>     119  </q-n></a><q-m>	                if ((ref_data[req_collected.paddr]==req_collected.prdata)) begin</q-m>
<a name="120"><q-n>     120  </q-n></a><q-m>		            `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);</q-m>
<a name="121"><q-n>     121  </q-n></a><q-m>                           `uvm_info(get_full_name(),"read_operation_matched_with_write_operation", UVM_LOW);</q-m>
<a name="122"><q-n>     122  </q-n></a><q-m>                    </q-m>
<a name="123"><q-n>     123  </q-n></a><q-m>	                end</q-m>
<a name="124"><q-n>     124  </q-n></a><q-m>                	else begin</q-m>
<a name="125"><q-n>     125  </q-n></a><q-m></q-m>
<a name="126"><q-n>     126  </q-n></a><q-m>                          `uvm_info(get_full_name(),"read_operation_not_matched_with_write_operation", UVM_LOW);</q-m>
<a name="127"><q-n>     127  </q-n></a><q-m>                       </q-m>
<a name="128"><q-n>     128  </q-n></a><q-m>		              end</q-m>
<a name="129"><q-n>     129  </q-n></a><q-m>                         end</q-m>
<a name="130"><q-n>     130  </q-n></a><q-m>		 end</q-m>
<a name="131"><q-n>     131  </q-n></a><q-m></q-m>
<a name="132"><q-n>     132  </q-n></a><q-m>       // else   `uvm_info(get_full_name(),"data_not_exist_in_the_addr", UVM_LOW);</q-m>
<a name="133"><q-n>     133  </q-n></a><q-m>	      </q-m>
<a name="134"><q-n>     134  </q-n></a><q-m> </q-m>
<a name="135"><q-n>     135  </q-n></a><q-m>     `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);    </q-m>
<a name="136"><q-n>     136  </q-n></a><q-m>	    </q-m>
<a name="137"><q-n>     137  </q-n></a><q-m>endfunction : write_drv2scb</q-m>
<a name="138"><q-n>     138  </q-n></a><q-m></q-m>
<a name="139"><q-n>     139  </q-n></a><q-m>        virtual function void write_item_collected(apb_seq_item req_collected);</q-m>
<a name="140"><q-n>     140  </q-n></a><q-m> </q-m>
<a name="141"><q-n>     141  </q-n></a><q-m></q-m>
<a name="142"><q-n>     142  </q-n></a><q-m>	 if(req_collected.pwrite==1)</q-m>
<a name="143"><q-n>     143  </q-n></a><q-m>	 </q-m>
<a name="144"><q-n>     144  </q-n></a><q-m>                                    begin</q-m>
<a name="145"><q-n>     145  </q-n></a><q-m></q-m>
<a name="146"><q-n>     146  </q-n></a><q-m>	                            ref_data[req_collected.pwdata]=req_collected.pwdata;  // data comes from monitor </q-m>
<a name="147"><q-n>     147  </q-n></a><q-m>                                    end</q-m>
<a name="148"><q-n>     148  </q-n></a><q-m>   </q-m>
<a name="149"><q-n>     149  </q-n></a><q-m>				    else  begin</q-m>
<a name="150"><q-n>     150  </q-n></a><q-m>	        	if (ref_data.exists(req_collected.paddr)) begin	    </q-m>
<a name="151"><q-n>     151  </q-n></a><q-m>	                if ((ref_data[req_collected.paddr]==req_collected.prdata)) begin</q-m>
<a name="152"><q-n>     152  </q-n></a><q-m>		            `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);</q-m>
<a name="153"><q-n>     153  </q-n></a><q-m>                           `uvm_info(get_full_name(),"read_operation_matched_with_write_operation", UVM_LOW);</q-m>
<a name="154"><q-n>     154  </q-n></a><q-m>                    </q-m>
<a name="155"><q-n>     155  </q-n></a><q-m>	                end</q-m>
<a name="156"><q-n>     156  </q-n></a><q-m>                	else begin</q-m>
<a name="157"><q-n>     157  </q-n></a><q-m></q-m>
<a name="158"><q-n>     158  </q-n></a><q-m>                          `uvm_info(get_full_name(),"read_operation_not_matched_with_write_operation", UVM_LOW);</q-m>
<a name="159"><q-n>     159  </q-n></a><q-m>                       </q-m>
<a name="160"><q-n>     160  </q-n></a><q-m>		              end</q-m>
<a name="161"><q-n>     161  </q-n></a><q-m>                         end</q-m>
<a name="162"><q-n>     162  </q-n></a><q-m>		 end</q-m>
<a name="163"><q-n>     163  </q-n></a><q-m></q-m>
<a name="164"><q-n>     164  </q-n></a><q-m>       // else   `uvm_info(get_full_name(),"data_not_exist_in_the_addr", UVM_LOW);</q-m>
<a name="165"><q-n>     165  </q-n></a><q-m>	      </q-m>
<a name="166"><q-n>     166  </q-n></a><q-m> </q-m>
<a name="167"><q-n>     167  </q-n></a><q-m>     `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);    </q-m>
<a name="168"><q-n>     168  </q-n></a><q-m>	    </q-m>
<a name="169"><q-n>     169  </q-n></a><q-m>endfunction : write_item_collected</q-m>
<a name="170"><q-n>     170  </q-n></a><q-m></q-m>
<a name="171"><q-n>     171  </q-n></a><q-m></q-m>
<a name="172"><q-n>     172  </q-n></a><q-m></q-m>
<a name="173"><q-n>     173  </q-n></a><q-m>endclass</q-m>
<a name="174"><q-n>     174  </q-n></a><q-m>*/</q-m>
<a name="175"><q-n>     175  </q-n></a>
<a name="176"><q-n>     176  </q-n></a>
<a name="177"><q-n>     177  </q-n></a>
<a name="178"><q-n>     178  </q-n></a><q-m>/*</q-m>
<a name="179"><q-n>     179  </q-n></a><q-m>`uvm_analysis_imp_decl(_item_collected)</q-m>
<a name="180"><q-n>     180  </q-n></a><q-m>`uvm_analysis_imp_decl(_drv2scb)</q-m>
<a name="181"><q-n>     181  </q-n></a><q-m></q-m>
<a name="182"><q-n>     182  </q-n></a><q-m>class apb_scb extends uvm_scoreboard;  </q-m>
<a name="183"><q-n>     183  </q-n></a><q-m>`uvm_component_utils(apb_scb)</q-m>
<a name="184"><q-n>     184  </q-n></a><q-m></q-m>
<a name="185"><q-n>     185  </q-n></a><q-m></q-m>
<a name="186"><q-n>     186  </q-n></a><q-m></q-m>
<a name="187"><q-n>     187  </q-n></a><q-m>//variables</q-m>
<a name="188"><q-n>     188  </q-n></a><q-m>//assosiative arry syntax</q-m>
<a name="189"><q-n>     189  </q-n></a><q-m>//  value        array_name        [key]</q-m>
<a name="190"><q-n>     190  </q-n></a><q-m>//data_type    array_identifier  [indextype]</q-m>
<a name="191"><q-n>     191  </q-n></a><q-m>apb_seq_item ref_data[$];    // declaring queue array</q-m>
<a name="192"><q-n>     192  </q-n></a><q-m></q-m>
<a name="193"><q-n>     193  </q-n></a><q-m></q-m>
<a name="194"><q-n>     194  </q-n></a><q-m></q-m>
<a name="195"><q-n>     195  </q-n></a><q-m>// declaring the analysis port for item collected in sc components</q-m>
<a name="196"><q-n>     196  </q-n></a><q-m>uvm_analysis_imp_imp_collected#(apb_seq_item, apb_scb)item_collected_export;  //monitor to scoreboard</q-m>
<a name="197"><q-n>     197  </q-n></a><q-m>uvm_analysis_imp_drv2scb#(apb_seq_item, apb_scb)drv2scb_export;         //driver to scoreboard</q-m>
<a name="198"><q-n>     198  </q-n></a><q-m></q-m>
<a name="199"><q-n>     199  </q-n></a><q-m></q-m>
<a name="200"><q-n>     200  </q-n></a><q-m>//contructor function</q-m>
<a name="201"><q-n>     201  </q-n></a><q-m>function new(string name,uvm_component parent);</q-m>
<a name="202"><q-n>     202  </q-n></a><q-m>    super.new(name,parent);</q-m>
<a name="203"><q-n>     203  </q-n></a><q-m></q-m>
<a name="204"><q-n>     204  </q-n></a><q-m>    //create analysis ports</q-m>
<a name="205"><q-n>     205  </q-n></a><q-m>    item_collected_export=new("item_collected_export",this);</q-m>
<a name="206"><q-n>     206  </q-n></a><q-m>    drv2scb_export=new("drv2scb_export",this);</q-m>
<a name="207"><q-n>     207  </q-n></a><q-m>  endfunction:new</q-m>
<a name="208"><q-n>     208  </q-n></a><q-m></q-m>
<a name="209"><q-n>     209  </q-n></a><q-m></q-m>
<a name="210"><q-n>     210  </q-n></a><q-m>//build phase</q-m>
<a name="211"><q-n>     211  </q-n></a><q-m>virtual function void build_phase(uvm_phase phase);</q-m>
<a name="212"><q-n>     212  </q-n></a><q-m>super.build_phase(phase);</q-m>
<a name="213"><q-n>     213  </q-n></a><q-m>endfunction:build_phase</q-m>
<a name="214"><q-n>     214  </q-n></a><q-m></q-m>
<a name="215"><q-n>     215  </q-n></a><q-m>//connect phase</q-m>
<a name="216"><q-n>     216  </q-n></a><q-m>virtual function void connect_phase(uvm_phase phase);</q-m>
<a name="217"><q-n>     217  </q-n></a><q-m>super.connect_phase(phase);</q-m>
<a name="218"><q-n>     218  </q-n></a><q-m>endfunction:connect_phase</q-m>
<a name="219"><q-n>     219  </q-n></a><q-m></q-m>
<a name="220"><q-n>     220  </q-n></a><q-m>//run_phase</q-m>
<a name="221"><q-n>     221  </q-n></a><q-m>virtual function void run_phase(uvm_phase phase);</q-m>
<a name="222"><q-n>     222  </q-n></a><q-m>super.run_phase(phase);</q-m>
<a name="223"><q-n>     223  </q-n></a><q-m>endfunction:run_phase</q-m>
<a name="224"><q-n>     224  </q-n></a><q-m></q-m>
<a name="225"><q-n>     225  </q-n></a><q-m></q-m>
<a name="226"><q-n>     226  </q-n></a><q-m>//driver to scoreboard write function</q-m>
<a name="227"><q-n>     227  </q-n></a><q-m>function void write_drv2scb(apb_seq_item item);</q-m>
<a name="228"><q-n>     228  </q-n></a><q-m>	//print seq_item recieved from driver</q-m>
<a name="229"><q-n>     229  </q-n></a><q-m>	`uvm_info("SCB",$sformatf("seq_item written from driver: \n"),UVM_HIGH)</q-m>
<a name="230"><q-n>     230  </q-n></a><q-m>	item.print();</q-m>
<a name="231"><q-n>     231  </q-n></a><q-m></q-m>
<a name="232"><q-n>     232  </q-n></a><q-m>	//pushe expected seq_item into accosiative array</q-m>
<a name="233"><q-n>     233  </q-n></a><q-m>	ref_data.push_back(item);</q-m>
<a name="234"><q-n>     234  </q-n></a><q-m>endfunction:write_drv2scb</q-m>
<a name="235"><q-n>     235  </q-n></a><q-m></q-m>
<a name="236"><q-n>     236  </q-n></a><q-m></q-m>
<a name="237"><q-n>     237  </q-n></a><q-m>    // monitor to scoreboard write function</q-m>
<a name="238"><q-n>     238  </q-n></a><q-m>    function void write_item_collected(apb_seq_item item);</q-m>
<a name="239"><q-n>     239  </q-n></a><q-m>        // print seq_item details received from monitor</q-m>
<a name="240"><q-n>     240  </q-n></a><q-m>        `uvm_info("SCB", $sformatf("Seq_item written from monitor: \n"), UVM_HIGH)</q-m>
<a name="241"><q-n>     241  </q-n></a><q-m>        item.print();</q-m>
<a name="242"><q-n>     242  </q-n></a><q-m>        </q-m>
<a name="243"><q-n>     243  </q-n></a><q-m>        // push captured seq_item into queue</q-m>
<a name="244"><q-n>     244  </q-n></a><q-m>        rcvd_seq_item_q.push_back(item);</q-m>
<a name="245"><q-n>     245  </q-n></a><q-m>    endfunction: write_mntr2scb</q-m>
<a name="246"><q-n>     246  </q-n></a><q-m></q-m>
<a name="247"><q-n>     247  </q-n></a><q-m>  </q-m>
<a name="248"><q-n>     248  </q-n></a><q-m></q-m>
<a name="249"><q-n>     249  </q-n></a><q-m></q-m>
<a name="250"><q-n>     250  </q-n></a><q-m></q-m>
<a name="251"><q-n>     251  </q-n></a><q-m>/* </q-m>
<a name="252"><q-n>     252  </q-n></a><q-m>  virtual function void write(apb_seq_item req);</q-m>
<a name="253"><q-n>     253  </q-n></a><q-m></q-m>
<a name="254"><q-n>     254  </q-n></a><q-m>	    ref_data[req.paddr]=req.pwdata;  // data comes from monitor</q-m>
<a name="255"><q-n>     255  </q-n></a><q-m>	    </q-m>
<a name="256"><q-n>     256  </q-n></a><q-m>endfunction : write </q-m>
<a name="257"><q-n>     257  </q-n></a><q-m></q-m>
<a name="258"><q-n>     258  </q-n></a><q-m></q-m>
<a name="259"><q-n>     259  </q-n></a><q-m>virtual function void write(apb_seq_item req_collected);</q-m>
<a name="260"><q-n>     260  </q-n></a><q-m></q-m>
<a name="261"><q-n>     261  </q-n></a><q-m>	 if(req_collected.pwrite==1)begin</q-m>
<a name="262"><q-n>     262  </q-n></a><q-m>                                   </q-m>
<a name="263"><q-n>     263  </q-n></a><q-m>	                         if(ref_data[req_collected.paddr]==req_collected.pwdata) // data comes from monitor  </q-m>
<a name="264"><q-n>     264  </q-n></a><q-m>				    begin</q-m>
<a name="265"><q-n>     265  </q-n></a><q-m>	       	if (ref_data.exists(req_collected.paddr)) begin	    </q-m>
<a name="266"><q-n>     266  </q-n></a><q-m>	                if ((ref_data[req_collected.paddr]==req_collected.prdata)) begin</q-m>
<a name="267"><q-n>     267  </q-n></a><q-m>		            `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);</q-m>
<a name="268"><q-n>     268  </q-n></a><q-m>                           `uvm_info(get_full_name(),"read_operation_matched_with_write_operation", UVM_LOW);</q-m>
<a name="269"><q-n>     269  </q-n></a><q-m>                       req_collected.print();</q-m>
<a name="270"><q-n>     270  </q-n></a><q-m>	                end</q-m>
<a name="271"><q-n>     271  </q-n></a><q-m>                	else begin</q-m>
<a name="272"><q-n>     272  </q-n></a><q-m></q-m>
<a name="273"><q-n>     273  </q-n></a><q-m>                          `uvm_info(get_full_name(),"read_operation_not_matched_with_write_operation", UVM_LOW);</q-m>
<a name="274"><q-n>     274  </q-n></a><q-m>  	                   req_collected.print();  </q-m>
<a name="275"><q-n>     275  </q-n></a><q-m>		              end</q-m>
<a name="276"><q-n>     276  </q-n></a><q-m>                         end</q-m>
<a name="277"><q-n>     277  </q-n></a><q-m>		end</q-m>
<a name="278"><q-n>     278  </q-n></a><q-m></q-m>
<a name="279"><q-n>     279  </q-n></a><q-m>       // else   `uvm_info(get_full_name(),"data_not_exist_in_the_addr", UVM_LOW);</q-m>
<a name="280"><q-n>     280  </q-n></a><q-m>       end	    </q-m>
<a name="281"><q-n>     281  </q-n></a><q-m> </q-m>
<a name="282"><q-n>     282  </q-n></a><q-m>     `uvm_info(get_full_name(),$sformatf(" \t paddr=%0h, \t pwdata=%0h,\t prdata=%0h", req_collected.paddr,req_collected.pwdata,req_collected.prdata ),UVM_LOW);    </q-m>
<a name="283"><q-n>     283  </q-n></a><q-m>	    </q-m>
<a name="284"><q-n>     284  </q-n></a><q-m>endfunction : write</q-m>
<a name="285"><q-n>     285  </q-n></a><q-m></q-m>
<a name="286"><q-n>     286  </q-n></a><q-m></q-m>
<a name="287"><q-n>     287  </q-n></a><q-m></q-m>
<a name="288"><q-n>     288  </q-n></a><q-m>endclass:apb_scb</q-m>
<a name="289"><q-n>     289  </q-n></a><q-m></q-m>
<a name="290"><q-n>     290  </q-n></a><q-m>*/</q-m>
<a name="291"><q-n>     291  </q-n></a>
</pre>
</tt>

  
</body>
</html>
