
<html>
<head>
  <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
  <title>Questa Coverage Report</title>
  <link rel="StyleSheet" media="screen" href="../css/hdl2html.css"/>
</head>
<body id="hdl2html">
  <tt>
<pre>
<a name="1"><q-n>     1  </q-n></a><q-w>module</q-w> apb_slave
<a name="2"><q-n>     2  </q-n></a>#(
<a name="3"><q-n>     3  </q-n></a>  addrWidth = 8,
<a name="4"><q-n>     4  </q-n></a>  dataWidth = 32
<a name="5"><q-n>     5  </q-n></a>)
<a name="6"><q-n>     6  </q-n></a>(
<a name="7"><q-n>     7  </q-n></a>  <q-w>input</q-w>                        clk,
<a name="8"><q-n>     8  </q-n></a>  <q-w>input</q-w>                        rst_n,
<a name="9"><q-n>     9  </q-n></a>  <q-w>input</q-w>        [addrWidth-1:0] paddr,
<a name="10"><q-n>     10  </q-n></a>  <q-w>input</q-w>                        pwrite,
<a name="11"><q-n>     11  </q-n></a>  <q-w>input</q-w>                        psel,
<a name="12"><q-n>     12  </q-n></a>  <q-w>input</q-w>                        penable,
<a name="13"><q-n>     13  </q-n></a>  <q-w>output</q-w> logic                 pready,
<a name="14"><q-n>     14  </q-n></a>  <q-w>input</q-w>        [dataWidth-1:0] pwdata,
<a name="15"><q-n>     15  </q-n></a>  <q-w>output</q-w> logic [dataWidth-1:0] prdata
<a name="16"><q-n>     16  </q-n></a>);
<a name="17"><q-n>     17  </q-n></a>
<a name="18"><q-n>     18  </q-n></a>logic [dataWidth-1:0] mem [256];
<a name="19"><q-n>     19  </q-n></a>
<a name="20"><q-n>     20  </q-n></a>logic [1:0] apb_st;
<a name="21"><q-n>     21  </q-n></a>const logic [1:0] SETUP_PHASE = 0;
<a name="22"><q-n>     22  </q-n></a>const logic [1:0] W_ENABLE = 1;
<a name="23"><q-n>     23  </q-n></a>const logic [1:0] R_ENABLE = 2;
<a name="24"><q-n>     24  </q-n></a>
<a name="25"><q-n>     25  </q-n></a><q-m>// SETUP_PHASE -&gt; ENABLE</q-m>
<a name="26"><q-n>     26  </q-n></a><q-w>always</q-w> @(<q-a>negedge</q-w> rst_n <q-t>or</q-w> <q-a>posedge</q-w> clk) <q-w>begin</q-w>
<a name="27"><q-n>     27  </q-n></a>  <q-w>if</q-w> (rst_n == 0) <q-w>begin</q-w>
<a name="28"><q-n>     28  </q-n></a>    apb_st &lt;= 0;
<a name="29"><q-n>     29  </q-n></a>    prdata &lt;= 0;
<a name="30"><q-n>     30  </q-n></a>  <q-w>end</q-w>
<a name="31"><q-n>     31  </q-n></a>
<a name="32"><q-n>     32  </q-n></a>  <q-w>else</q-w> <q-w>begin</q-w>
<a name="33"><q-n>     33  </q-n></a>    <q-w>case</q-w> (apb_st)
<a name="34"><q-n>     34  </q-n></a>      SETUP_PHASE : <q-w>begin</q-w>
<a name="35"><q-n>     35  </q-n></a>        <q-m>// clear the prdata</q-m>
<a name="36"><q-n>     36  </q-n></a>        prdata &lt;= 0;
<a name="37"><q-n>     37  </q-n></a>        pready &lt;= 1;
<a name="38"><q-n>     38  </q-n></a>        <q-m>// Move to ENABLE when the psel is asserted</q-m>
<a name="39"><q-n>     39  </q-n></a>        <q-w>if</q-w> (psel &amp;&amp; !penable) <q-w>begin</q-w>
<a name="40"><q-n>     40  </q-n></a>          <q-w>if</q-w> (pwrite) <q-w>begin</q-w>
<a name="41"><q-n>     41  </q-n></a>            apb_st &lt;= W_ENABLE;
<a name="42"><q-n>     42  </q-n></a>          <q-w>end</q-w>
<a name="43"><q-n>     43  </q-n></a>
<a name="44"><q-n>     44  </q-n></a>          <q-w>else</q-w> <q-w>begin</q-w>
<a name="45"><q-n>     45  </q-n></a>            apb_st &lt;= R_ENABLE;
<a name="46"><q-n>     46  </q-n></a>          <q-w>end</q-w>
<a name="47"><q-n>     47  </q-n></a>        <q-w>end</q-w>
<a name="48"><q-n>     48  </q-n></a>      <q-w>end</q-w>
<a name="49"><q-n>     49  </q-n></a>
<a name="50"><q-n>     50  </q-n></a>      W_ENABLE : <q-w>begin</q-w>
<a name="51"><q-n>     51  </q-n></a>        <q-m>// write pwdata to memory</q-m>
<a name="52"><q-n>     52  </q-n></a>        <q-w>if</q-w> (psel &amp;&amp; penable &amp;&amp; pwrite) <q-w>begin</q-w>
<a name="53"><q-n>     53  </q-n></a>          mem[paddr] &lt;= pwdata;
<a name="54"><q-n>     54  </q-n></a>        <q-w>end</q-w>
<a name="55"><q-n>     55  </q-n></a>
<a name="56"><q-n>     56  </q-n></a>        <q-m>// return to SETUP_PHASE</q-m>
<a name="57"><q-n>     57  </q-n></a>        apb_st &lt;= SETUP_PHASE;
<a name="58"><q-n>     58  </q-n></a>      <q-w>end</q-w>
<a name="59"><q-n>     59  </q-n></a>
<a name="60"><q-n>     60  </q-n></a>      R_ENABLE : <q-w>begin</q-w>
<a name="61"><q-n>     61  </q-n></a>        <q-m>// read prdata from memory</q-m>
<a name="62"><q-n>     62  </q-n></a>        <q-w>if</q-w> (psel &amp;&amp; penable &amp;&amp; !pwrite) <q-w>begin</q-w>
<a name="63"><q-n>     63  </q-n></a>          prdata &lt;= mem[paddr];
<a name="64"><q-n>     64  </q-n></a>        <q-w>end</q-w>
<a name="65"><q-n>     65  </q-n></a>
<a name="66"><q-n>     66  </q-n></a>        <q-m>// return to SETUP_PHASE</q-m>
<a name="67"><q-n>     67  </q-n></a>        apb_st &lt;= SETUP_PHASE;
<a name="68"><q-n>     68  </q-n></a>      <q-w>end</q-w>
<a name="69"><q-n>     69  </q-n></a>    <q-w>endcase</q-w>
<a name="70"><q-n>     70  </q-n></a>  <q-w>end</q-w>
<a name="71"><q-n>     71  </q-n></a><q-w>end</q-w> 
<a name="72"><q-n>     72  </q-n></a>
<a name="73"><q-n>     73  </q-n></a>
<a name="74"><q-n>     74  </q-n></a><q-w>endmodule</q-w>
</pre>
</tt>

  
</body>
</html>
